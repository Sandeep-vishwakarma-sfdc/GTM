[Select id,Name from Account]

List<GTM_Details__c> gtmDetails = GTMPathFinder.getCatergoryAllocation();
System.debug(gtmDetails);

System.debug(Userinfo.getUserId());

select Id,Name from Account where Sales_Org_Code__c='5631'  and recordType.Id='0120k000000P0eQAAS' and Lead_Customer_Ownership__c='005280000017DV0'

select id,Name, from Product_Category_Sales_Org_Mapping__c where Status__c='Active' and Sales_Org__r.Sales_Org_Code__c='5631'

delete [Select Id,Name from GTM_Details__c];

GTMPathFinder.getCatergoryAllocation();

SELECT FiscalYearSettings.Name , StartDate,EndDate, type FROM Period WHERE Type = 'Year' AND StartDate <= TODAY AND EndDate >= TODAY limit 1

leadcustomerRecordType 0120k000000P0eQAAS

select Id,Name,Lead_Customer_Type__c from Account where Sales_Org_Code__c='5631'  and recordType.Id='0120k000000P0eQAAS' and Lead_Customer_Ownership__c='005280000017DV0'

String leadRecordType = '0120k000000P0eQAAS';

select Id,Name from Account where Sales_Org_Code__c='5631' and Account_Type__c='Sold To Party' and Lead_Customer__c!=null and Lead_Customer_Ownership__c='005280000017DV0' and recordTypeId='0120k000000P0eQAAS'

GTMPathFinder.getGTMCustomers();

GTMPathFinder.updateGTMDetail('a4k0k0000002RFtAAM','50');

List<Account> ac = GTMPathFinder.getGTMCustomers();
System.debug(ac.size());

List<GTM_Details__c> details = [SELECT ID,Name,GTM__c from GTM_Details__c where GTM__c='a4j0k000000iQpp'];
delete details;
System.debug(details[0].get('Name'));
delete details;

------------------------------------------------------------------------------------------------

select Id,Name from Crop__c where GTM_Status__c='Active' and Sales_Org_Code__c='5631'
Map<string,List<GTM_Details__c>> cropmap = GTMPathFinder.getCropAllocation();
System.debug(cropmap);

List<Crop__c> crops = GTMPathFinder.getActiveCrop();
System.debug('Crops '+crops.size());

GTM__c gtm = [select Id,Name from GTM__c];
GTMPathFinder.createGTMPotentialAndProfile(gtm);

delete [select Id,Name from GTM__c];

Decimal val = Decimal.valueOf(null);


--------------------------------------- OUTLOOK ----------------------------------------------------

Id recordTypePotentialProfile = Schema.SObjectType.GTM_Details__c.getRecordTypeInfosByName().get('Outlook').getRecordTypeId();

List<GTM_Details__c> gtmDetailsList = [Select Id, GTM_Customer__r.Name, GTM_Customer__c, Estimated_Growth_NY_to_2NY__c, Estimated_Growth_PY_to_CY__c, Estimated_Growth_PY_to_NY__c, Sales_Org__c from GTM_Details__c];

delete gtmDetailsList;

List<GTM_Details__c> outlooks = GTMOutlook.getGTMOutlook();
System.debug('size'+outlooks.size());

------------------------------------- Product Category --------------------------------------------------

GTMPathFinder.getCatergoryAllocation();

---------------------------------------GTM Configuration -------------------------------

---------------------------------------GTM CUSTOMERS ----------------------------------
List<Account> gtmCustomers = new List<Account>();
        List<Account> leadCustomerList = new List<Account>();
        List<Account> nonLeadCustomerList = new List<Account>();
        Map<String,Account> newGTMCustomers = new Map<String,Account>();
        Set<String> oldAccounts = new Set<String>();
        List<Account> newAccountsFound = new List<Account>();
        Map<String,List<String>> maprecordTypeDetails = new Map<String,List<String>>();
        Id leadcustomerRecordType = Schema.SObjectType.Account.getRecordTypeInfosByName().get('Lead Customer').getRecordTypeId();
        Id nonleadcustomerRecordType = Schema.SObjectType.Account.getRecordTypeInfosByName().get('Distributor').getRecordTypeId();
        System.debug('leadcustomerRecordType '+leadcustomerRecordType);
        if(Schema.sObjectType.Account.isAccessible()){
            // Getting Lead Customers by record type
            leadCustomerList = [select Id,Name,Lead_Customer_Type__c from Account where Sales_Org_Code__c='5631'  and recordType.Id=:leadcustomerRecordType and Lead_Customer_Ownership__c=:userInfo.getUserId()];
            // Getting non-lead customer when lead customer field is empty
            nonLeadCustomerList = [select Id,Name,Lead_Customer_Type__c from Account where Sales_Org_Code__c='5631' and Account_Type__c='Sold To Party' and Lead_Customer__c=null and Lead_Customer_Ownership__c=:userInfo.getUserId() and recordTypeId=:nonleadcustomerRecordType];
        }
        System.debug('Lead Customer '+leadCustomerList);
        System.debug('non lead '+nonLeadCustomerList);
        gtmCustomers.addAll(leadCustomerList);
        gtmCustomers.addAll(nonLeadCustomerList);
        System.debug('GTM Customer size'+gtmCustomers.size());
        for(Account customer : gtmCustomers){
            newGTMCustomers.put(customer.Id,customer);
        }
        List<GTM_Details__c> gtmdetailsAccounts = [Select Id,recordTypeId,Name,GTM_Customer__c,GTM_Customer__r.Name,GTM_Customer__r.Path_Finder__c,GTM_Customer__r.Lead_Customer__c,GTM_Customer__r.Lead_Customer_Type__c from GTM_Details__c where GTM__r.Fiscal_Year__c=:GTMPathFinder.getFiscalYear() and GTM__r.Sales_Org__c=:GTMPathFinder.getSalesOrg().Id and GTM__r.Sales_Rep__c=:userInfo.getUserId()];
        for(GTM_Details__c detailsAccount:gtmdetailsAccounts){
            List<String> listAccount = new List<String>();
            if(maprecordTypeDetails.containskey(detailsAccount.recordTypeId)){
                listAccount = maprecordTypeDetails.get(detailsAccount.recordTypeId);
                listAccount.add(detailsAccount.GTM_Customer__c);
                maprecordTypeDetails.put(detailsAccount.recordTypeId,listAccount);
            }else{
                listAccount.add(detailsAccount.GTM_Customer__c);
                maprecordTypeDetails.put(detailsAccount.recordTypeId,listAccount);
            }
        }

        Id recordTypePotentialProfile = Schema.SObjectType.GTM_Details__c.getRecordTypeInfosByName().get('Profile & Potential').getRecordTypeId();
        Id recordTypeCropAllocation = Schema.SObjectType.GTM_Details__c.getRecordTypeInfosByName().get('Crop Allocation').getRecordTypeId();
        Id recordTypeProductCategory = Schema.SObjectType.GTM_Details__c.getRecordTypeInfosByName().get('Product Category Allocation').getRecordTypeId();
        Id recordTypeCompetition = Schema.SObjectType.GTM_Details__c.getRecordTypeInfosByName().get('Competitor').getRecordTypeId();
        Id recordTypeOutlook = Schema.SObjectType.GTM_Details__c.getRecordTypeInfosByName().get('Outlook').getRecordTypeId();

        System.debug('maprecordTypeDetails '+maprecordTypeDetails);
        for(Account newCustomer : newGTMCustomers.values()){
            boolean potentialProfileData = maprecordTypeDetails.get(recordTypePotentialProfile)?.contains(newCustomer.id);
            boolean productCatergoryData = maprecordTypeDetails.get(recordTypeCropAllocation)?.contains(newCustomer.id);
            boolean cropAllocationData = maprecordTypeDetails.get(recordTypeProductCategory)?.contains(newCustomer.id);
            boolean competitionData = maprecordTypeDetails.get(recordTypeCompetition)?.contains(newCustomer.id);
            boolean outlookdata = maprecordTypeDetails.get(recordTypeOutlook)?.contains(newCustomer.id);

            if(potentialProfileData==false && productCatergoryData==false && cropAllocationData==false && competitionData==false && outlookdata==false){ // new customer not having any type of GTM Details
                newAccountsFound.add(newCustomer);
            }
        }
        System.debug('new Accounts added'+newAccountsFound);


        System.debug('New  Crops '+GTMPathFinder.getNewlyAddedCrop());

        System.debug(GTMPathFinder.getSalesOrg());

        List<GTM_Details__c> gtmdetails = [Select id,Name,isSubmitted__c,GTM__c from GTM_Details__c where isSubmitted__c=true];

            for(GTM_Details__c gtmd:gtmdetails){
                gtmd.isSubmitted__c = false;
            }
            update gtmdetails;
